{"version":3,"sources":["redux/actions/contactsAction.js","redux/operations/authOperation.js","redux/actions/authActions.js","redux/reducers/contactsReducer.js","redux/reducers/authReducer.js","redux/store.js","routes.js","redux/selectors/authSelectors.js","components/Navigation/Navigation.js","components/UserMenu/UserMenu.js","components/Header/Header.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","index.js"],"names":["addContactsRequest","createAction","addContactsSuccess","addContactsError","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","removeContactsRequest","removeContactsSuccess","removeContactsError","addFilter","filter","payload","axios","defaults","baseURL","token","headers","common","Authorization","register","credentials","dispatch","authActions","registerRequest","post","then","response","data","registerSuccess","catch","error","registerError","login","loginRequest","loginSuccess","loginError","logout","logoutRequest","logoutSuccess","logoutError","getCurrentUser","getState","persistedToken","auth","getCurrentUserRequest","get","getCurrentUserSuccess","getCurrentUserError","itemsReducer","createReducer","contactsAction","state","action","find","contact","name","toLowerCase","alert","id","filterReducer","loadingReducer","alertReducer","combineReducers","items","loading","initialUserState","email","user","_","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","contacts","contactsReducer","persistReducer","authReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","maineroutes","path","exact","component","lazy","isVisible","private","restricted","connect","isLogin","authSelectors","to","className","activeClassName","onLogout","authOperation","type","onClick","Component","routeProps","render","props","App","this","onGetCurrentUser","fallback","map","route","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.5bd9398a.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\n// ---------------Add contacts--------------------------\nconst addContactsRequest = createAction('contacts/addRequest');\nconst addContactsSuccess = createAction('contacts/addSuccess');\nconst addContactsError = createAction('contacts/addError');\n\nconst fetchContactsRequest = createAction('contacts/fetchRequest');\nconst fetchContactsSuccess = createAction('contacts/fetchSuccess');\nconst fetchContactsError = createAction('contacts/fetchError');\n\n// ---------------Remove contacts--------------------------\n\nconst removeContactsRequest = createAction('contacts/removeRequest');\nconst removeContactsSuccess = createAction('contacts/removeSuccess');\nconst removeContactsError = createAction('contacts/removeError');\n\n// ---------------Filter--------------------------\nconst addFilter = createAction('contacts/addFilter', filter => ({\n  payload: { filter },\n}));\n\n// --------------------export---------------------------------\n\nexport default {\n  addContactsRequest,\n  addContactsSuccess,\n  addContactsError,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  removeContactsSuccess,\n  removeContactsRequest,\n  removeContactsError,\n  addFilter,\n};\n","import axios from 'axios';\r\nimport authActions from '../actions/authActions';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nconst register = credentials => dispatch => {\r\n  dispatch(authActions.registerRequest());\r\n  axios\r\n    .post('/users/signup', credentials)\r\n    .then(response => {\r\n      // console.log('credentials:', credentials);\r\n      // console.log('register response:', response);\r\n      token.set(response.data.token);\r\n      dispatch(authActions.registerSuccess(response.data));\r\n    })\r\n    .catch(error => dispatch(authActions.registerError(error)));\r\n};\r\n\r\nconst login = credentials => dispatch => {\r\n  dispatch(authActions.loginRequest());\r\n  axios\r\n    .post('/users/login', credentials)\r\n    .then(response => {\r\n      // console.log('credentials login:', credentials);\r\n      // console.log('register response login:', response);\r\n      token.set(response.data.token);\r\n      dispatch(authActions.loginSuccess(response.data));\r\n    })\r\n    .catch(error => dispatch(authActions.loginError(error)));\r\n};\r\n\r\nconst getCurrentUser = () => (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  // console.log('persistedToken:', persistedToken);\r\n\r\n  token.set(persistedToken);\r\n  dispatch(authActions.getCurrentUserRequest());\r\n\r\n  axios\r\n    .get('/users/current')\r\n    .then(({ data }) => {\r\n      // console.log('getCurrentUser data:', data);\r\n      dispatch(authActions.getCurrentUserSuccess(data));\r\n    })\r\n    .catch(error => dispatch(authActions.getCurrentUserError(error)));\r\n};\r\n\r\nconst logout = () => dispatch => {\r\n  dispatch(authActions.logoutRequest());\r\n  axios\r\n    .post('/users/logout')\r\n    .then(() => {\r\n      // console.log('logOut!!!');\r\n      token.unset();\r\n      dispatch(authActions.logoutSuccess());\r\n    })\r\n    .catch(error => dispatch(authActions.logoutError(error)));\r\n};\r\n\r\nexport default {\r\n  register,\r\n  login,\r\n  logout,\r\n  getCurrentUser,\r\n};\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\nexport default {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};\r\n","import { createReducer } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport contactsAction from '../actions/contactsAction';\n\n// ----------------------Contacts---------------------------------------\n\nconst itemsReducer = createReducer([], {\n  [contactsAction.fetchContactsSuccess]: (state, action) => {\n    // console.log(action.payload);\n    return action.payload;\n  },\n\n  [contactsAction.addContactsSuccess]: (state, action) => {\n    return state.find(\n      contact =>\n        contact.name.toLowerCase() === action.payload.name.toLowerCase(),\n    )\n      ? alert(`${action.payload.name} is already in contacts `)\n      : [...state, action.payload];\n  },\n\n  [contactsAction.removeContactsSuccess]: (state, action) => {\n    return state.filter(contact => contact.id !== action.payload);\n  },\n});\n\n// ----------------Filter--------------------------------------------\nconst filterReducer = createReducer('', {\n  [contactsAction.addFilter]: (state, action) => {\n    return action.payload.filter;\n  },\n});\n\n// ----------------Loader-------------------------------------------\n\nconst loadingReducer = createReducer(false, {\n  [contactsAction.fetchContactsRequest]: () => true,\n  [contactsAction.addContactsRequest]: () => true,\n  [contactsAction.removeContactsRequest]: () => true,\n  [contactsAction.addContactsSuccess]: () => false,\n  [contactsAction.fetchContactsSuccess]: () => false,\n  [contactsAction.removeContactsSuccess]: () => false,\n  [contactsAction.addContactsError]: () => false,\n  [contactsAction.fetchContactsError]: () => false,\n  [contactsAction.removeContactsError]: () => false,\n});\n\n// ---------------------alert------------------------------\n\nconst alertReducer = createReducer(false, {});\n\n// ---------------------------export---------------------------------\nexport default combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n  loading: loadingReducer,\n  alert: alertReducer,\n});\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\nimport authActions from '../actions/authActions';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n  [authActions.logoutSuccess]: () => initialUserState,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [authActions.registerError]: (_, { payload }) => payload,\r\n  [authActions.loginError]: (_, { payload }) => payload,\r\n  [authActions.getCurrentUserError]: (_, { payload }) => payload,\r\n  [authActions.logoutError]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({ user, token, error });\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './reducers/contactsReducer';\nimport authReducer from './reducers/authReducer';\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nexport const store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n    auth: persistReducer(authPersistConfig, authReducer),\n  },\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n});\n\nexport const persistor = persistStore(store);\n","import { lazy } from 'react';\r\n\r\nexport const maineroutes = [\r\n  {\r\n    path: '/',\r\n    name: 'Home',\r\n    exact: true,\r\n    component: lazy(() => import('./pages/HomePage')),\r\n    isVisible: true,\r\n    private: false,\r\n    restricted: false,\r\n  },\r\n  {\r\n    path: '/register',\r\n    name: 'Register',\r\n    exact: false,\r\n    component: lazy(() => import('./pages/RegisterPage')),\r\n    isVisible: true,\r\n    private: false,\r\n    restricted: true,\r\n  },\r\n  {\r\n    path: '/login',\r\n    name: 'Login',\r\n    exact: false,\r\n    component: lazy(() => import('./pages/LoginPage')),\r\n    isVisible: true,\r\n    private: false,\r\n    restricted: true,\r\n  },\r\n  {\r\n    path: '/contacts',\r\n    name: 'Contacts',\r\n    exact: false,\r\n    component: lazy(() => import('./pages/ContactsPage')),\r\n    isVisible: true,\r\n    private: true,\r\n    restricted: false,\r\n  },\r\n];\r\n","const isLogin = state => state.auth.token;\r\n\r\nconst getUserName = state => state.auth.user.name;\r\n\r\nexport default { isLogin, getUserName };\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { maineroutes } from '../../routes';\r\nimport { connect } from 'react-redux';\r\nimport authSelectors from '../../redux/selectors/authSelectors';\r\n\r\nfunction Navigation({ isLogin }) {\r\n  return (\r\n    <nav>\r\n      <NavLink to=\"/\" exact className=\"NavLink\" activeClassName=\"NavLinkActive\">\r\n        Home\r\n      </NavLink>\r\n\r\n      {isLogin ? (\r\n        <NavLink\r\n          to=\"/contacts\"\r\n          exact\r\n          className=\"NavLink\"\r\n          activeClassName=\"NavLinkActive\"\r\n        >\r\n          Contacts\r\n        </NavLink>\r\n      ) : (\r\n        <>\r\n          <NavLink\r\n            to=\"/register\"\r\n            exact\r\n            className=\"NavLink\"\r\n            activeClassName=\"NavLinkActive\"\r\n          >\r\n            Register\r\n          </NavLink>\r\n          <NavLink\r\n            to=\"/login\"\r\n            exact\r\n            className=\"NavLink\"\r\n            activeClassName=\"NavLinkActive\"\r\n          >\r\n            Login\r\n          </NavLink>\r\n        </>\r\n      )}\r\n\r\n      {/* {maineroutes.map(route => (\r\n        <NavLink\r\n          key={route.path}\r\n          exact={route.exact}\r\n          to={route.path}\r\n          className=\"NavLink\"\r\n          activeClassName=\"NavLinkActive\"\r\n        >\r\n          {route.name.toUpperCase()}\r\n        </NavLink>\r\n      ))} */}\r\n    </nav>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isLogin: authSelectors.isLogin(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(Navigation);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport authSelectors from '../../redux/selectors/authSelectors';\r\nimport authOperation from '../../redux/operations/authOperation';\r\n\r\nconst UserMenu = ({ name, onLogout }) => (\r\n  <>\r\n    <h3>Welcome, {name}!</h3>\r\n    <button type=\"button\" onClick={onLogout}>\r\n      Logout\r\n    </button>\r\n  </>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  name: authSelectors.getUserName(state),\r\n});\r\n\r\nexport default connect(mapStateToProps, { onLogout: authOperation.logout })(\r\n  UserMenu,\r\n);\r\n","import React from 'react';\r\n\r\nimport Navigation from '../Navigation/Navigation';\r\nimport UserMenu from '../UserMenu/UserMenu';\r\nimport { connect } from 'react-redux';\r\nimport authSelectors from '../../redux/selectors/authSelectors';\r\n\r\nfunction Header({ isLogin }) {\r\n  return (\r\n    <div>\r\n      <Navigation />\r\n      {isLogin && <UserMenu />}\r\n      <hr />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isLogin: authSelectors.isLogin(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(Header);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport authSelectors from '../redux/selectors/authSelectors';\r\n\r\nconst PrivateRoute = ({ component: Component, isLogin, ...routeProps }) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props => {\r\n      return isLogin ? <Component {...props} /> : <Redirect to=\"/login\" />;\r\n    }}\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isLogin: authSelectors.isLogin(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport authSelectors from '../redux/selectors/authSelectors';\r\n\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isLogin,\r\n  restricted,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props => {\r\n      return isLogin && restricted ? (\r\n        <Redirect to=\"/contacts\" />\r\n      ) : (\r\n        <Component {...props} />\r\n      );\r\n    }}\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isLogin: authSelectors.isLogin(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n","import React, { Component } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport { Suspense } from 'react';\nimport { Switch, Redirect } from 'react-router-dom';\nimport { maineroutes } from './routes';\n\nimport { connect } from 'react-redux';\nimport authOperation from './redux/operations/authOperation';\nimport Header from './components/Header/Header';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\n\nclass App extends Component {\n  componentDidMount() {\n    // console.log('componentDidMount:', this.props.onGetCurrentUser());\n    this.props.onGetCurrentUser();\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <Header />\n        <Suspense fallback={<h1>Loading....</h1>}>\n          <Switch>\n            {maineroutes.map(route => {\n              return route.private ? (\n                <PrivateRoute key={route.path} {...route} />\n              ) : (\n                <PublicRoute\n                  key={route.path}\n                  {...route}\n                  restricted={route.restricted}\n                />\n              );\n            })}\n            <Redirect to=\"/\" />\n          </Switch>\n        </Suspense>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default connect(null, {\n  onGetCurrentUser: authOperation.getCurrentUser,\n})(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}